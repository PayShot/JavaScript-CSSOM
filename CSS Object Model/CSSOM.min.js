var CSS_Object_Models={};var CSSOM=function(t){function s(e){return!isNaN(parseFloat(e))&&isFinite(e)}if(typeof t==="undefined"){t=""}this.DataType={PIXELS:0,EM:1,PERCENTAGE:2,NUMBER:3,RGB:4,STRING:5,FONT:6,URL:7};var n={};var r={};if(t!=""){if(CSS_Object_Models.hasOwnProperty(t)){n=CSS_Object_Models[t].css;r=CSS_Object_Models[t].cssHash}else{CSS_Object_Models[t]={css:{},cssHash:{}}}}var i=function(r){this.id=n[r].id;this.name=r;this.className=r.substr(0,1)=="."?r.substr(1,r.length-1):"";this.declarations=n[r].declarations;this.appendDeclaration=function(e,i,s){if(typeof n[r]==="undefined"){throw new Error("Unable to append new declarations: selector does not exist.")}else{if(typeof e==="undefined"||typeof i==="undefined"||typeof s==="undefined"){throw new Error("Unable to append a new declaration: Missing parameters.")}else{this.declarations.push({id:"h"+(e+i+s).toString().hash(),property:e,value:i,datatype:s});if(t!=""){CSS_Object_Models[t].css=n}}}}};this.appendSelector=function(e,t){if(typeof t==="undefined"){t=true}if(e.constructor.name=="Selector"){if(n.hasOwnProperty(e.name)){if(t){var r=n[e.name].declarations;var i=e.declarations;for(var s=0;s<i.length;s++){var o=true;for(var u=0;u<r.length;u++){if(i[s].id==r[u].id){o=false}}if(o){n[e.name].declarations.push(i[s])}}}else{n[e.name]={id:e.id,declarations:e.declarations}}}else{n[e.name]={id:e.id,declarations:e.declarations}}}else{throw new Error("Invalid type of argument selector. Unable to append a selector to the CSS Object Model.")}};this.setSelector=function(e,s){if(typeof e==="undefined"){throw new Error("Invalid type of argument selectorName, can't be empty.")}if(n.hasOwnProperty(e)){return-1}else{if(typeof s==="undefined"){s="h"+e.toString().hash()}n[e]={id:s,declarations:new Array};r[s]=e;if(t!=""){CSS_Object_Models[t].css=n;CSS_Object_Models[t].cssHash=r}return new i(e)}};this.getSelector=function(e){if(typeof e==="undefined"){throw new Error("Unable to getSelector: Missing parameters.")}else{if(s(e)){if(r.hasOwnProperty(e)){e=r[e]}else{return-1}}}};this.toString=function(e){const t="    ";var r="";if(typeof e==="undefined"||e==false){for(var i in n){r+=i+" {\n";for(var s=0;s<n[i].declarations.length;s++){r+=t+n[i].declarations[s].property+": ";switch(n[i].declarations[s].datatype){case this.DataType.PIXELS:r+=n[i].declarations[s].value;r+="px";break;case this.DataType.EM:r+=n[i].declarations[s].value;r+="em";break;case this.DataType.PERCENTAGE:r+=n[i].declarations[s].value;r+="%";break;case this.DataType.RGB:r+="rgb(";r+=n[i].declarations[s].value[0]+", ";r+=n[i].declarations[s].value[1]+", ";r+=n[i].declarations[s].value[2];r+=")";break;case this.DataType.NUMBER:case this.DataType.STRING:r+=n[i].declarations[s].value;break;case this.DataType.FONT:r+="'"+n[i].declarations[s].value+"'";break;case this.DataType.URL:r+="url('"+n[i].declarations[s].value+"')";break;default:throw new Error("Invalid data type for CSS declaration rule: <"+n[i].declarations[s].datatype)+">"}r+=";\n"}r+="}\n"}}else{for(var i in n){r+=i+"{";for(var s=0;s<n[i].declarations.length;s++){r+=n[i].declarations[s].property+":";switch(n[i].declarations[s].datatype){case this.DataType.PIXELS:r+=n[i].declarations[s].value;if(parseFloat(n[i].declarations[s].value)!=0){r+="px"}break;case this.DataType.EM:r+=n[i].declarations[s].value;if(parseFloat(n[i].declarations[s].value)!=0){r+="em"}break;case this.DataType.PERCENTAGE:r+=n[i].declarations[s].value;if(parseFloat(n[i].declarations[s].value)!=0){r+="%"}break;case this.DataType.RGB:r+="rgb(";r+=n[i].declarations[s].value[0]+",";r+=n[i].declarations[s].value[1]+",";r+=n[i].declarations[s].value[2];r+=")";break;case this.DataType.NUMBER:case this.DataType.STRING:r+=n[i].declarations[s].value;break;case this.DataType.FONT:r+="'"+n[i].declarations[s].value+"'";break;case this.DataType.URL:r+="url('"+n[i].declarations[s].value+"')";break;default:throw new Error("Invalid data type for CSS declaration rule: <"+n[i].declarations[s].datatype)+">"}if(s!=n[i].declarations.length-1){r+=";"}}r+="}\n"}}return r};String.prototype.hash=function(){var e=0;if(this.length==0){return e}for(var t=0;t<this.length;t++){var n=this.charCodeAt(t);e=(e<<5)-e+n;e=e&e}return e}}